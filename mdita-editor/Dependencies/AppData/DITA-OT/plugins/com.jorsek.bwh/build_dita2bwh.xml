<?xml version="1.0" encoding="utf-8"?><!-- This file is part of the DITA Open Toolkit project hosted on 
     Sourceforge.net. See the accompanying license.txt file for 
     applicable licenses.--><!-- (c) Copyright IBM Corp. 2006 All Rights Reserved. --><project name="dita2bwh">
	
    <target name="dita2bwh" depends="build-init, preprocess, dita.map.bwh,       copy-default-user-styles, copy-scripts, copy-heading-footer,      copy-others, dita.topics.bwh, dita.inner.topics.bwh,       dita.outer.topics.bwh, build-search-index">
    </target>

    <target name="dita.map.bwh" depends="dita.map.bwh.init, dita.map.bwh.toc , dita.out.map.bwh.toc"></target>

    <target name="dita.map.bwh.init" depends="dita.bwh.init" unless="noMap">
    	<condition property="args.bwh.toc.xsl" value="${dita.plugin.com.jorsek.bwh.dir}${file.separator}xsl${file.separator}map2xhtmtoc.xsl">
        <not>
          <isset property="args.bwh.toc.xsl"></isset>
        </not>
      </condition>
        <condition property="args.bwh.toc" value="index">
            <not>
                <isset property="args.bwh.toc"></isset>
            </not>
        </condition>
    </target>
    

  	
    <target name="dita.map.bwh.toc" unless="noMap" if="old.transform" description="Build HTML TOC file">
        <xslt basedir="${dita.temp.dir}" destdir="${output.dir}" includesfile="${dita.temp.dir}${file.separator}${user.input.file.listfile}" classpathref="dost.class.path" style="${args.bwh.toc.xsl}">
        	<excludesfile name="${dita.temp.dir}${file.separator}${resourceonlyfile}" if="resourceonlyfile"></excludesfile>
            <param name="DITAEXT" expression="${dita.ext}" if="dita.ext"></param>
            <param name="OUTEXT" expression="${out.ext}" if="out.ext"></param>
            <param name="contenttarget" expression="${args.bwh.contenttarget}" if="args.bwh.contenttarget"></param>
            <param name="CSS" expression="${args.css.file}" if="args.css.file"></param>
            <param name="CSSPATH" expression="${user.csspath}" if="user.csspath"></param>
            <param name="OUTPUTCLASS" expression="${args.bwh.toc.class}" if="args.bwh.toc.class"></param>
        	<param name="OUTPUTFILE" expression="${args.bwh.toc}${out.ext}"></param>
        	<param name="OUTPUTDIR" expression="${output.dir}"></param>
            
            <mapper type="glob" from="*${dita.input.filename}" to="*${args.bwh.toc}${out.ext}"></mapper>
          <xmlcatalog refid="dita.catalog"></xmlcatalog>
        </xslt>
    </target>
    

    <target name="dita.out.map.bwh.toc" unless="noMap" if="inner.transform" description="Build HTML TOC file,which will adjust the directory">
        <xslt basedir="${dita.temp.dir}" destdir="${output.dir}" includesfile="${dita.temp.dir}${file.separator}${user.input.file.listfile}" classpathref="dost.class.path" style="${args.bwh.toc.xsl}">
        	<excludesfile name="${dita.temp.dir}${file.separator}${resourceonlyfile}" if="resourceonlyfile"></excludesfile>
            <param name="DITAEXT" expression="${dita.ext}" if="dita.ext"></param>
            <param name="OUTEXT" expression="${out.ext}" if="out.ext"></param>
            <param name="contenttarget" expression="${args.bwh.contenttarget}" if="args.bwh.contenttarget"></param>
            <param name="CSS" expression="${args.css.file}" if="args.css.file"></param>
            <param name="CSSPATH" expression="${user.csspath}" if="user.csspath"></param>
            <param name="OUTPUTCLASS" expression="${args.bwh.toc.class}" if="args.bwh.toc.class"></param>
        	<param name="OUTPUTFILE" expression="${args.bwh.toc}${out.ext}"></param>
        	<param name="OUTPUTDIR" expression="${output.dir}"></param>
            
            <mapper type="glob" from="${user.input.file}" to="${args.bwh.toc}${out.ext}"></mapper>
          <xmlcatalog refid="dita.catalog"></xmlcatalog>
        </xslt>
    </target>
    
  <target name="copy-revflag" if="dita.input.valfile">
    <dita-ot-echo id="DOTA069W">
      <param name="1" value="copy-revflag"></param>
    </dita-ot-echo>
  </target>
    
	<target name="copy-scripts" description="Copying CSS and JS Scripts">
		<!-- Copy System CSS Files -->
		<copy todir="${output.dir}${file.separator}scripts">
			<fileset dir="${dita.plugin.com.jorsek.bwh.dir}${file.separator}resource${file.separator}scripts" includes="*.css" excludes="user-*.css"></fileset>
		</copy>
		<!-- Copy System JS Files -->
		<copy todir="${output.dir}${file.separator}scripts">
			<fileset dir="${dita.plugin.com.jorsek.bwh.dir}${file.separator}resource${file.separator}scripts" includes="*.js" excludes="*_side-panel-search.js"></fileset>
		</copy>
	</target>
	
<!-- only copy over the default heading.html file and heading/ folder if one doesn't already exist
	in the output directory. (i.e. if the user has already added their customized heading, don't overwrite it) -->
	<available file="${output.dir}${file.separator}heading.html" property="heading.available"></available>
	<available file="${output.dir}${file.separator}footer.html" property="footer.available"></available>
	
	<target name="copy-heading-footer" depends="copy-default-footer, copy-default-heading"></target>
	<target name="copy-default-heading" description="Copy Default Heading" unless="heading.available">
<!--		Copy over the default heading HTML file -->
		<copy todir="${output.dir}">
			<fileset dir="${dita.plugin.com.jorsek.bwh.dir}${file.separator}resource" includes="heading.html"></fileset>
		</copy>
<!--		Copy over the default logos, etc -->
		<mkdir dir="${user.headingpath.real}${file.separator}heading"></mkdir>
		<copy todir="${output.dir}${file.separator}heading">
			<fileset dir="${dita.plugin.com.jorsek.bwh.dir}${file.separator}resource${file.separator}heading" includes="*"></fileset>
		</copy>
	</target>
	<target name="copy-default-footer" description="Copy Default Footer" unless="footer.available">
		<!--		Copy over the default heading HTML file -->
		<copy todir="${output.dir}">
			<fileset dir="${dita.plugin.com.jorsek.bwh.dir}${file.separator}resource" includes="footer.html"></fileset>
		</copy>
	</target>

<!-- only copy over the default user-fonts.css file if one doesn't already exist in the output directory. 
		(i.e. if the user has already added their customized fonts, don't overwrite it) -->
	<available file="${output.dir}${file.separator}scripts${file.separator}user-fonts.css" property="user-fonts.available"></available>
	<available file="${output.dir}${file.separator}scripts${file.separator}user-styling.css" property="user-styling.available"></available>
	
	<target name="copy-default-user-styles" depends="copy-default-user-fonts, copy-default-user-styling"></target>
	<target name="copy-default-user-fonts" description="Copy Default User Fonts" unless="user-fonts.available">
		<copy todir="${output.dir}${file.separator}scripts">
			<fileset dir="${dita.plugin.com.jorsek.bwh.dir}${file.separator}resource${file.separator}scripts" includes="user-fonts.css"></fileset>
		</copy>
	</target>
	<target name="copy-default-user-styling" description="Copy Default User Styling" unless="user-styling.available">
		<copy todir="${output.dir}${file.separator}scripts">
			<fileset dir="${dita.plugin.com.jorsek.bwh.dir}${file.separator}resource${file.separator}scripts" includes="user-styling.css"></fileset>
		</copy>
	</target>

  <target name="copy-css-user" if="user.copycss.yes">
    <copy file="${args.css.real}" todir="${user.csspath.real}"></copy>
  </target>
  
	<target name="copy-others">
		<copy todir="${output.dir}">
			<fileset dir="${dita.plugin.com.jorsek.bwh.dir}${file.separator}resource" includes="fallback.html help-icon.png"></fileset>
		</copy>
	</target>

	<target name="build-search-index" unless="${noindex}" description="Build Lunr Search Index">
		<echo message="Running XSLT Indexer..."></echo>
		<xslt basedir="${dita.temp.dir}" destdir="${output.dir}${file.separator}indexes" includesfile="${dita.temp.dir}${file.separator}${user.input.file.listfile}" classpathref="dost.class.path" style="${dita.plugin.com.jorsek.bwh.dir}${file.separator}xsl${file.separator}dita2json.xsl">
			<mapper type="glob" from="${user.input.file}" to="lunr_raw.txt"></mapper>
		</xslt>
		<echo>Indexer Complete.</echo>
		<echo>Loading files...</echo>
		<loadfile property="source.data" srcFile="${output.dir}${file.separator}indexes${file.separator}lunr_raw.txt"></loadfile>
		<echo file="${dita.temp.dir}${file.separator}temp-code.js">
			
				var idx = lunr(function() {
					this.field(&apos;Title&apos;, { boost: 10 })
					this.field(&apos;Shortdesc&apos;)
					this.field(&apos;Body&apos;)
					this.field(&apos;URI&apos;)
				});
				
				var x = project.getProperty(&quot;source.data&quot;);
				var y=x.replaceAll(/\s+/g,&apos; &apos;).trim();
				var z=y.substring(0,y.length()-3).concat(&apos; ]&apos;);
				var indexData = JSON.parse(z);
				var len = indexData.length;
				var lastPrint = -1;
				
				var startTime = new Date().getTime();
				for (x in indexData) {
					perc = x/len*100;
					percInt = parseInt(perc);
					percString = String(percInt) + &quot;% Indexed...&quot;;
					if (percInt != lastPrint) {
						java.lang.System.out.println(percString);
						lastPrint = percInt;
					};
					indexData[x].id = Number(x);
					idx.add(indexData[x]);
				}
				java.lang.System.out.println(&quot;100% Indexed.&quot;);
				var endTime = new Date().getTime();
				var delta = endTime-startTime;
				if (delta &gt; 90000) {
					var mins = parseInt(delta/60000);
					var secs = delta/1000 - parseInt(delta/60000)*60
					var timeOutput = &quot;Indexed in &quot; + String(mins) + &quot;minutes &quot; + String(secs) + &quot; seconds.&quot;;
				} else if (delta &gt; 5000) {
					var timeOutput = &quot;Indexed in &quot; + String(delta/1000) + &quot; seconds&quot;;
				} else {
					var timeOutput = &quot;Indexed in &quot; + String(delta) + &quot;ms&quot;;
				}
				java.lang.System.out.println(timeOutput);
				project.setProperty(&quot;lunrIndex&quot;,JSON.stringify(idx));
				project.setProperty(&quot;lunrData&quot;,JSON.stringify(indexData));
			
		</echo>
		<concat destfile="${dita.temp.dir}${file.separator}temp-code-full.js">
			<fileset file="${dita.plugin.com.jorsek.bwh.dir}${file.separator}resource${file.separator}scripts${file.separator}lunr.js"></fileset>
			<fileset file="${dita.temp.dir}${file.separator}temp-code.js"></fileset>
		</concat>
		<echo>Loaded.</echo>
		<echo>Indexing...</echo>
		<script language="javascript" src="${dita.temp.dir}${file.separator}temp-code-full.js"></script>
		<echo>Indexing Complete.</echo>
		<echo>Saving files...</echo>
		<echo file="${output.dir}${file.separator}indexes${file.separator}lunrIndex.txt" append="false">
			${lunrIndex}
		</echo>
		<echo file="${output.dir}${file.separator}indexes${file.separator}lunrData.txt" append="false">
			${lunrData}
		</echo>
		<echo>File Save Complete.</echo>
	</target>
  
</project>